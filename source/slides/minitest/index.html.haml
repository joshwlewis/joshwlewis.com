---
title: Unit Testing with Minitest
published: true
description: Introduction to Unit Testing using Minitest
---

= step "title", 'rotate-x' => 90, 'rotate-z' => -90  do
  %h1 Unit Testing with Minitest
  %br
  %h4 Memphis Ruby Users Group
  %date 1/21/2013
  %br
  %h4
    Josh W Lewis -
    %a{href: "//twitter.com/joshwlewis"} @joshwlewis
  %h4
    %a{href: '//plia.com'} Plia Systems

= step "definition", 'rotate-y' => 90 do
  %blockquote In computer programming, unit testing is a method by which individual units of source code, sets of one or more computer program modules together with associated control data, usage procedures, and operating procedures are tested to determine if they are fit for use.
  %a.pull-right{href: "//en.wikipedia.org/wiki/Unit_test"} - Wikipedia

= step "tldr" do
  %h4 TL;DR
  %blockquote Unit testing is code that makes sure your code works.

= step "why", y: 1000, z: 1500 do
  %h3 Why Unit Test?
  %ul
    %li Confidence
    %li Speed
    %li Refactorability
    %li Quality
    %li Reliability
    %li Documentation

= step "minitest", y: 1500, x: 1060, z: 1060, 'rotate-y' => 45 do
  %h2 Minitest is Awesome!
  %h4
    %a{href: '//github.com/seattlerb/minitest'} github.com/seattlerb/minitest
  %ul
    %li Lightweight
    %li Ships with Ruby
    %li Unit or Spec style tests
    %li Mocking and Stubbing
    %li Benchmarking

= step 'unit-example', y: 2000, x: 1500, 'rotate-y' => 90 do
  %h3 Test/Unit style tests are standard with Minitest
  = partial 'initials'
  = partial 'initials_unit'

= step 'spec-example', y: 2500, x: 1060, z: -1060, 'rotate-y' => 135 do
  %h3 Spec style tests are also available with Minitest
  = partial 'initials'
  = partial 'initials_spec'

= step 'project', y: 3000, x: 0, z: -1500, 'rotate-y' => 180 do
  %h3 Let's make an app for that...
  %p My boss wants something to translate English to Pig Latin and Pig Latin to English. And he wants it to remember previous translations.
  = partial 'rails_new'
  %p
    Source available at:
    %a{href: '//github.com/joshwlewis/pig_latin'} github.com/joshwlewis/pig_latin
  

= step 'minitest-rails', y: 3500, x: -1060, z: -1060, 'rotate-y' => 225 do
  %h3 Use minitest-rails to bootstrap your test suite
  = partial 'minitest_rails'

= step 'guard', y: 4000, x: -1500, 'rotate-y' => 270 do
  %h3 Automated testing enables TDD workflow
  = partial 'guard'

= step 'payoff', y: 4500, x: -1060, z: 1060, 'rotate-y' => 315 do
  %h3 The Payoff...
  %ul
    %li 
      Code Test Coverage:
      %a{href: '//coveralls.io/r/joshwlewis/pig_latin'}
        %img{src: '//coveralls.io/repos/joshwlewis/pig_latin/badge.png'}
    %li 
      Continuous Integration:
      %a{href: '//travis-ci.org/joshwlewis/pig_latin'}
        %img{src: '//travis-ci.org/joshwlewis/pig_latin.png?branch=master'}
    %li
      Continuous Deployment:
      %a{href: '//pig-latin.herokuapp.com'} pig-latin.herokuapp.com

= step 'resources', x: -2500, y: 2750, z: 8000 do
  %h2 Resources
  %dl
    %dt Minitest documentation
    %dl
      %a{href: '//github.com/seattlerb/minitest'} github.com/seattlerb/minitest
    %dt Minitest Quick Reference
    %dl
      %a{href: '//mattsears.com/articles/2011/12/10/minitest-quick-reference'} mattsears.com/articles/2011/12/10/minitest-quick-reference
    %dt Rails Assertions
    %dl
      %a{href: '//topfunky.com/clients/rails/ruby_and_rails_assertions.pdf'} topfunky.com/clients/rails/ruby_and_rails_assertions.pdf
    %dt Pig Latin Translator
    %dl
      %a{href: '//github.com/joshwlewis/pig_latin'} github.com/joshwlewis/pig_latin
    %dt This Presentation
    %dl
      %a{href: '//joshwlewis.com/slides/minitest/'} joshwlewis.com/slides/minitest
